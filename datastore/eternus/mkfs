#!/bin/bash
#exec &> >(tee -a "/tmp/eternus-mkfs.log")

# -------------------------------------------------------------------------- #
# Copyright 2014, Laurent Grawet <dev@grawet.be>                             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

###############################################################################
# This script is used to create a VM image (SRC) of size (SIZE) and formatted
# as (FS)
###############################################################################

# -------- Set up the environment to source common tools & conf ------------

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../libfs.sh
source ${DRIVER_PATH}/scripts_eternus.sh


DRV_ACTION=$1
ID=$2

if [ "$ID" -eq 120 ]; then
    echo "$DRV_ACTION" > /tmp/eternus-mkfs.params
fi

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRV_ACTION"

unset i XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/BASE_PATH \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/RESTRICTED_DIRS \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/SAFE_DIRS \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/UMASK \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BRIDGE_LIST \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/ARRAY_MGMTIP \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/ARRAY_POOL_NAME \
                    /DS_DRIVER_ACTION_DATA/IMAGE/FSTYPE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/SIZE)

#                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BASE_IQN \
#CLUSTER="${XPATH_ELEMENTS[17]:-$CLUSTER}"
#BASE_IQN="${XPATH_ELEMENTS[18]:-$BASE_IQN}"

#set -x
BASE_PATH="${XPATH_ELEMENTS[0]}"
RESTRICTED_DIRS="${XPATH_ELEMENTS[1]}"
SAFE_DIRS="${XPATH_ELEMENTS[2]}"
UMASK="${XPATH_ELEMENTS[3]}"
BRIDGE_LIST="${XPATH_ELEMENTS[4]:-$BRIDGE_LIST}"
ARRAY_MGMTIP="${XPATH_ELEMENTS[5]}"
ARRAY_POOL_NAME="${XPATH_ELEMENTS[6]}"
FSTYPE="${XPATH_ELEMENTS[7]}"
SIZE="${XPATH_ELEMENTS[8]:-0}"


DST_HOST=`get_destination_host $ID`

# -------- Start actions ------------

set_up_datastore "$BASE_PATH" "$RESTRICTED_DIRS" "$SAFE_DIRS" "$UMASK"

VVOL_NAME="one-${ID}"

VVOL_CREATE=$( eternus_ssh_monitor_and_log "${ARRAY_MGMTIP}" \
        "create volume -pool-name "${ARRAY_POOL_NAME}" -type tpv -size "${SIZE}"mb -name "${VVOL_NAME}"" )

VVOL_UID=$( eternus_get_vvol_uid "${VVOL_NAME}" "${ARRAY_MGMTIP}" )
MAP_NAME="3${VVOL_UID}"
DEV="/dev/mapper/${MAP_NAME}"


# ------------ Image to save_as disk, no need to create a FS ------------

if [ "$FSTYPE" = "save_as" ] || [ "$FSTYPE" = "raw" ] || [ "$FSTYPE" = "" ]; then
    exit 0
fi
