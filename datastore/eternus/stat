#!/bin/bash

# OpenNebula driver for Fujitsu Eternus DX series
# https://github.com/deepthinkag/OpenNebula-addon-eternus/
# <fhe@deepthink.ag>

#PHASE: INIT

#stat: returns the size of an image in Mb
#ARGUMENTS: datastore_image_dump image_id
#datastore_image_dump is an XML dump of the driver action encoded in Base 64.
#image_source is the image source which will be later sent to the transfer manager.

#set -u

[[ $# == 2 ]] || exit 1
DRV_ACTION="${1}"
ID="${2}"

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

DRV_PATH=$(dirname  "$0")
DRV_TASK=$(basename "$0")


# source opennebula tools and eternus scripts
for lib in ${LIB_LOCATION}/sh/scripts_common.sh ${DRV_PATH}/../libfs.sh ${DRV_PATH}/scripts_eternus.sh; do
    bash -eun "$lib" && source "$lib" || { echo "Error: failed to set up driver"; exit 1; }
done

# parse XML Data from DRV_ACTION
get_xpath_info

if [[ $DEBUG = "YES" ]]; then
    echo "$DRV_ACTION" > /var/tmp/one/eternus-"${DRV_TASK}".params
    exec &> >(tee -a /var/tmp/one/eternus-"${DRV_TASK}.log")
fi

#PHASE: PREP
DST_HOST=$( get_destination_host "$ID" )

#PHASE: RUN

if SIZE=$( fs_size "${IMAGE_PATH}" ); then
    if [ "${SIZE:-0}" = '0' ]; then
        error_message "Cannot determine size for ${SRC}"
    else
        error_message "${SIZE}"
    fi
    exit 1
fi


#PHASE: POST
#RETURNS: size
echo "${SIZE}"
