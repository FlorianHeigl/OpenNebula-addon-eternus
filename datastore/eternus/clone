#!/bin/bash

# OpenNebula driver for Fujitsu Eternus DX series
# https://github.com/deepthinkag/OpenNebula-addon-eternus/
# <fhe@deepthink.ag>

#PHASE: INIT

#clone: clones an image.
#ARGUMENTS: datastore_image_dump image_id
#datastore_image_dump is an XML dump of the driver action encoded in Base 64.
#image_id 

#set -u

[[ $# == 2 ]] || exit 1
DRV_ACTION="${1}"
ID="${2}"

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

DRV_PATH=$(dirname  "$0")
DRV_TASK=$(basename "$0")


# source opennebula tools and eternus scripts
for lib in ${LIB_LOCATION}/sh/scripts_common.sh ${DRV_PATH}/../libfs.sh ${DRV_PATH}/scripts_eternus.sh; do
    bash -eun "$lib" && source "$lib" || { echo "Error: failed to set up driver"; exit 1; }
done

# parse XML Data from DRV_ACTION
get_xpath_info

if [[ $DEBUG = "YES" ]]; then
    echo "$DRV_ACTION" > /var/tmp/one/eternus-"${DRV_TASK}".params
    exec &> >(tee -a /var/tmp/one/eternus-"${DRV_TASK}.log")
fi

#PHASE: PREP
DST_HOST=$( get_destination_host "$ID" )

set_up_datastore "$BASE_PATH" "$RESTRICTED_DIRS" "$SAFE_DIRS" "$UMASK"

# /dev/mapper/3uid
DEV_SRC=${IMAGE_PATH}

#PHASE: RUN
VVOL_NAME="one-${ID}"

VVOL_CREATE=$( eternus_ssh_monitor_and_log "${ARRAY_MGMTIP}" \
        "create volume -pool-name "${ARRAY_POOL_NAME}" -type tpv -size "${SIZE}"mb -name "${VVOL_NAME}"" )

VVOL_UID=$( eternus_get_vvol_uid "${VVOL_NAME}" "${ARRAY_MGMTIP}" )
MAP_NAME="3${VVOL_UID}"
DEV="/dev/mapper/${MAP_NAME}"

eternus_map $ARRAY_MGMT_IP $DST_HOST $VVOL_NAME
#eternus_map $ARRAY_MGMT_IP $DST_HOST $VVOL_NAME

CLONE_CMD=$(cat <<EOF
    set -e
#iscsi_map $VVOL_UID
#iscsi_map $basenmae... aua
#test -b ?
    echo $SUDO $DD if=$DEV_SRC of=$DEV bs=64k
EOF
)

ssh_exec_and_log "$DST_HOST" "$CLONE_CMD" "Error registering $DST_HOST:$DEV"

echo "CLONE_CMD: $CLONE_CMD"
echo "$SUDO $DD if=$DEV_SRC of=$DEV bs=64k"


#PHASE: POST
#RETURNS: source
#source the new source for the image.

echo "${DEV}" 
